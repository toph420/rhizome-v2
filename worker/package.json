{
  "name": "rhizome-worker",
  "version": "1.0.0",
  "type": "module",
  "scripts": {
    "start": "tsx index.ts",
    "build": "tsc",
    "dev": "tsx watch index.ts",
    "test": "NODE_OPTIONS='--experimental-vm-modules' jest --config jest.config.cjs",
    "test:watch": "NODE_OPTIONS='--experimental-vm-modules' jest --config jest.config.cjs --watch",
    "test:integration": "NODE_OPTIONS='--experimental-vm-modules' jest --config jest.config.cjs tests/integration",
    "test:unit": "NODE_OPTIONS='--experimental-vm-modules' jest --config jest.config.cjs __tests__",
    "test:critical": "NODE_OPTIONS='--experimental-vm-modules' jest --config jest.config.cjs tests/integration/full-system.test.ts tests/engines/orchestrator.test.ts",
    "test:stable": "NODE_OPTIONS='--experimental-vm-modules' jest --config jest.config.cjs tests/engines/ tests/integration/processor-integration.test.ts",
    "test:flexible": "NODE_OPTIONS='--experimental-vm-modules' jest --config jest.config.cjs __tests__/ lib/__tests__/ --passWithNoTests || true",
    "test:experimental": "NODE_OPTIONS='--experimental-vm-modules' jest --config jest.config.cjs tests/experimental/ --passWithNoTests",
    "test:validate": "tsx tests/integration/run-validation.ts",
    "test:full-validation": "npm run build && npm run lint && npm run test:integration && npm run test:validate",
    "validate:metadata": "tsx tests/validation/run-validation-suite.ts",
    "validate:metadata:real": "tsx tests/validation/run-validation-suite.ts --real-ai",
    "validate:metadata:verbose": "tsx tests/validation/run-validation-suite.ts --verbose",
    "validate:metadata-quality": "node ../scripts/validate-metadata-quality.js",
    "report:metadata-quality": "node ../scripts/validate-metadata-quality.js --output-report",
    "ci:metadata-validation": "node ../scripts/validate-metadata-quality.js --output-report",
    "test:all-sources": "NODE_OPTIONS='--experimental-vm-modules' jest tests/integration/processor-integration.test.ts",
    "test:backwards-compatibility": "NODE_OPTIONS='--experimental-vm-modules' jest tests/integration/processor-integration.test.ts -t 'backwards'",
    "test:youtube-videos": "NODE_OPTIONS='--experimental-vm-modules' jest tests/integration/processor-integration.test.ts -t 'YouTube'",
    "test:web-articles": "NODE_OPTIONS='--experimental-vm-modules' jest tests/integration/processor-integration.test.ts -t 'Web'",
    "test:text-processing": "NODE_OPTIONS='--experimental-vm-modules' jest tests/integration/processor-integration.test.ts -t 'Text'",
    "test:retry-scenarios": "NODE_OPTIONS='--experimental-vm-modules' jest tests/integration/processor-integration.test.ts -t 'retry'",
    "test:database-batching": "NODE_OPTIONS='--experimental-vm-modules' jest tests/integration/processor-integration.test.ts -t 'Batch'",
    "test:cache-metrics": "NODE_OPTIONS='--experimental-vm-modules' jest tests/integration/processor-integration.test.ts -t 'Cache'",
    "lint": "eslint . --ext .ts,.tsx",
    "benchmark:all": "npm run benchmark:batch-processing && npm run benchmark:pdf-processing && npm run benchmark:orchestration",
    "benchmark:batch-processing": "tsx benchmarks/batch-processing.ts",
    "benchmark:pdf-processing": "tsx benchmarks/pdf-benchmark.ts",
    "benchmark:orchestration": "tsx benchmarks/orchestration-benchmark.ts",
    "benchmark:performance": "tsx benchmarks/performance-test.ts",
    "benchmark:semantic-engine": "tsx benchmarks/semantic-engine-benchmark.ts",
    "benchmark:quick": "tsx benchmarks/batch-processing.ts --quick && tsx benchmarks/pdf-benchmark.ts --quick",
    "benchmark:report": "tsx benchmarks/batch-processing.ts && tsx benchmarks/pdf-benchmark.ts && echo '\n=== Comprehensive Performance Report Complete ==='",
    "benchmark:compare": "echo 'Comparing with baseline...' && npm run benchmark:quick",
    "benchmark:metadata-quality": "tsx benchmarks/metadata-quality-benchmark.ts",
    "benchmark:metadata-quality:real": "tsx benchmarks/metadata-quality-benchmark.ts --real-ai",
    "validate:semantic-accuracy": "tsx tests/validation/semantic-accuracy.ts",
    "test:ai-metadata-quality": "NODE_OPTIONS='--experimental-vm-modules' jest --config jest.config.cjs tests/validation/ai-metadata-quality.test.ts",
    "test:ai-metadata-quality:verbose": "NODE_OPTIONS='--experimental-vm-modules' jest --config jest.config.cjs tests/validation/ai-metadata-quality.test.ts --verbose"
  },
  "dependencies": {
    "@ai-sdk/google": "^2.0.17",
    "@google/genai": "^0.3.0",
    "@mozilla/readability": "^0.6.0",
    "@supabase/supabase-js": "^2.45.0",
    "adm-zip": "^0.5.16",
    "ai": "^5.0.56",
    "axios": "^1.12.2",
    "chalk": "^5.3.0",
    "dotenv": "^17.2.2",
    "fast-xml-parser": "^5.2.5",
    "fastest-levenshtein": "^1.0.16",
    "jsdom": "^27.0.0",
    "jsonrepair": "^3.13.1",
    "node-cron": "^3.0.3",
    "tsx": "^4.7.0",
    "turndown": "^7.2.1",
    "youtube-transcript-plus": "^1.1.1"
  },
  "devDependencies": {
    "@types/adm-zip": "^0.5.7",
    "@types/jest": "^29.5.0",
    "@types/mozilla__readability": "^0.4.2",
    "@types/node": "^20.0.0",
    "eslint": "^8.50.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "ts-jest": "^29.1.0",
    "typescript": "^5.0.0"
  }
}
